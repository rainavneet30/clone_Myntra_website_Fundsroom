{"ast":null,"code":"import * as types from \"./types\";\nimport axios from \"axios\";\n\n//Register User\nexport const registerUser = userData => async dispatch => {\n  try {\n    dispatch({\n      type: types.REGISTER_USER_REQUEST\n    });\n    const data = await axios.post(`https://busy-rose-earthworm-cap.cyclic.app/user/new`, userData);\n    console.log(data.data);\n    dispatch({\n      type: types.REGISTER_USER_SUCCESS,\n      payload: {\n        token: data.data.token,\n        message: data.data.message,\n        user: data.data.user\n      }\n    });\n  } catch (error) {\n    dispatch({\n      type: types.REGISTER_USER_ERROR\n    });\n  }\n};\n\n// export const editUser = (userData, id) => async (dispatch) => {\n//   try {\n//     dispatch({ type: types.UPDATE_USER_REQUEST });\n//     const data = await axios.put(\n//       `https://busy-rose-earthworm-cap.cyclic.app/user/update?id=${id}`,\n//       userData\n//     );\n//     console.log(data.data);\n//     dispatch({\n//       type: types.UPDATE_USER_SUCCESS,\n//       payload: {\n//         token: data.data.token,\n//         message: data.data.message,\n//         user: data.data.user,\n//       },\n//     });\n//   } catch (error) {\n//     dispatch({\n//       type: types.UPDATE_USER_ERROR,\n//     });\n//   }\n// };\n\nexport const authLogin = data => async dispatch => {\n  try {\n    dispatch({\n      type: types.LOGIN_USER_REQUEST\n    });\n    const res = await axios.post(\"https://busy-rose-earthworm-cap.cyclic.app/user/login\", data);\n    console.log(res);\n    localStorage.setItem(\"user\", JSON.stringify(res.data.user));\n    dispatch({\n      type: types.LOGIN_USER_SUCCESS,\n      payload: {\n        token: res.data.token,\n        message: res.data.message,\n        user: res.data.user\n      }\n    });\n  } catch (error) {\n    dispatch({\n      type: types.LOGIN_USER_ERROR\n    });\n  }\n};\nexport const authLogout = () => async dispatch => {\n  try {\n    dispatch({\n      type: types.AUTH_LOGOUT\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"names":["types","axios","registerUser","userData","dispatch","type","REGISTER_USER_REQUEST","data","post","console","log","REGISTER_USER_SUCCESS","payload","token","message","user","error","REGISTER_USER_ERROR","authLogin","LOGIN_USER_REQUEST","res","localStorage","setItem","JSON","stringify","LOGIN_USER_SUCCESS","LOGIN_USER_ERROR","authLogout","AUTH_LOGOUT"],"sources":["C:/Users/DELL/OneDrive/Desktop/myntra_clone_fundsroom/src/Redux/auth/action.js"],"sourcesContent":["import * as types from \"./types\";\nimport axios from \"axios\";\n\n//Register User\nexport const registerUser = (userData) => async (dispatch) => {\n  try {\n    dispatch({ type: types.REGISTER_USER_REQUEST });\n    const data = await axios.post(\n      `https://busy-rose-earthworm-cap.cyclic.app/user/new`,\n      userData\n    );\n    console.log(data.data);\n    dispatch({\n      type: types.REGISTER_USER_SUCCESS,\n      payload: {\n        token: data.data.token,\n        message: data.data.message,\n        user: data.data.user,\n      },\n    });\n  } catch (error) {\n    dispatch({\n      type: types.REGISTER_USER_ERROR,\n    });\n  }\n};\n\n// export const editUser = (userData, id) => async (dispatch) => {\n//   try {\n//     dispatch({ type: types.UPDATE_USER_REQUEST });\n//     const data = await axios.put(\n//       `https://busy-rose-earthworm-cap.cyclic.app/user/update?id=${id}`,\n//       userData\n//     );\n//     console.log(data.data);\n//     dispatch({\n//       type: types.UPDATE_USER_SUCCESS,\n//       payload: {\n//         token: data.data.token,\n//         message: data.data.message,\n//         user: data.data.user,\n//       },\n//     });\n//   } catch (error) {\n//     dispatch({\n//       type: types.UPDATE_USER_ERROR,\n//     });\n//   }\n// };\n\nexport const authLogin = (data) => async (dispatch) => {\n  try {\n    dispatch({ type: types.LOGIN_USER_REQUEST });\n\n    const res = await axios.post(\n      \"https://busy-rose-earthworm-cap.cyclic.app/user/login\",\n      data\n    );\n    console.log(res);\n    localStorage.setItem(\"user\", JSON.stringify(res.data.user));\n    dispatch({\n      type: types.LOGIN_USER_SUCCESS,\n      payload: {\n        token: res.data.token,\n        message: res.data.message,\n        user: res.data.user,\n      },\n    });\n  } catch (error) {\n    dispatch({\n      type: types.LOGIN_USER_ERROR,\n    });\n  }\n};\n\nexport const authLogout = () => async (dispatch) => {\n  try {\n    dispatch({\n      type: types.AUTH_LOGOUT,\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,SAAS;AAChC,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AACA,OAAO,MAAMC,YAAY,GAAIC,QAAQ,IAAK,MAAOC,QAAQ,IAAK;EAC5D,IAAI;IACFA,QAAQ,CAAC;MAAEC,IAAI,EAAEL,KAAK,CAACM;IAAsB,CAAC,CAAC;IAC/C,MAAMC,IAAI,GAAG,MAAMN,KAAK,CAACO,IAAI,CAC1B,qDAAoD,EACrDL,QAAQ,CACT;IACDM,OAAO,CAACC,GAAG,CAACH,IAAI,CAACA,IAAI,CAAC;IACtBH,QAAQ,CAAC;MACPC,IAAI,EAAEL,KAAK,CAACW,qBAAqB;MACjCC,OAAO,EAAE;QACPC,KAAK,EAAEN,IAAI,CAACA,IAAI,CAACM,KAAK;QACtBC,OAAO,EAAEP,IAAI,CAACA,IAAI,CAACO,OAAO;QAC1BC,IAAI,EAAER,IAAI,CAACA,IAAI,CAACQ;MAClB;IACF,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdZ,QAAQ,CAAC;MACPC,IAAI,EAAEL,KAAK,CAACiB;IACd,CAAC,CAAC;EACJ;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,SAAS,GAAIX,IAAI,IAAK,MAAOH,QAAQ,IAAK;EACrD,IAAI;IACFA,QAAQ,CAAC;MAAEC,IAAI,EAAEL,KAAK,CAACmB;IAAmB,CAAC,CAAC;IAE5C,MAAMC,GAAG,GAAG,MAAMnB,KAAK,CAACO,IAAI,CAC1B,uDAAuD,EACvDD,IAAI,CACL;IACDE,OAAO,CAACC,GAAG,CAACU,GAAG,CAAC;IAChBC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACJ,GAAG,CAACb,IAAI,CAACQ,IAAI,CAAC,CAAC;IAC3DX,QAAQ,CAAC;MACPC,IAAI,EAAEL,KAAK,CAACyB,kBAAkB;MAC9Bb,OAAO,EAAE;QACPC,KAAK,EAAEO,GAAG,CAACb,IAAI,CAACM,KAAK;QACrBC,OAAO,EAAEM,GAAG,CAACb,IAAI,CAACO,OAAO;QACzBC,IAAI,EAAEK,GAAG,CAACb,IAAI,CAACQ;MACjB;IACF,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdZ,QAAQ,CAAC;MACPC,IAAI,EAAEL,KAAK,CAAC0B;IACd,CAAC,CAAC;EACJ;AACF,CAAC;AAED,OAAO,MAAMC,UAAU,GAAG,MAAM,MAAOvB,QAAQ,IAAK;EAClD,IAAI;IACFA,QAAQ,CAAC;MACPC,IAAI,EAAEL,KAAK,CAAC4B;IACd,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOZ,KAAK,EAAE;IACdP,OAAO,CAACC,GAAG,CAACM,KAAK,CAAC;EACpB;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}